# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Production CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FLUTTER_VERSION: 3.9.0-1.0.pre.166
  TAG_NAME: "1.0.0"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
      - name: Install dependencies
        run: flutter pub get
      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: dart analyze
      # - run: flutter build apk
      # - uses: actions/upload-artifact@v1
      #   with:
      #     name: release-apk
      #     path: build/app/outputs/apk/release/app-release.apk


      # - name: Create a Release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: "v${{ env.TAG_NAME }}"
      #     release_name: "Release v${{ env.TAG_NAME }}"
      #     draft: false
      #     prerelease: false

      # - name: Upload APK as Release Asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: "${{ steps.create_release.outputs.upload_url }}"
      #     asset_path: build/app/outputs/apk/release/app-release.apk
      #     asset_name: app-release.apk
      #     asset_content_type: application/vnd.android.package-archive
